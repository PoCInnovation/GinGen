package controllers

//@HandlerDeclaration_Start

//@HandlerId: controllers.CreateUser
//@RequestBody
//@-Description: creates a new user based on the content of the body
//@-Types: application/json,application/xml,application/x-www-form-urlencoded
//@-Schema: /path/to/l afrique
//@-required: true
//@Response
//@-Status: 200
//@-Description: Was able to create a user
//@-Types: application/json,application/xml,application/x-www-form-urlencoded
//@-Schema: /path/to/mes couilles
//@Response
//@-Status: 400
//@-Description: Couldn't create new user because the given email already exists in the data base
//@-Types: application/json,application/xml,application/x-www-form-urlencoded
//@-Schema: /path/to/mes couilles

//@HandlerDeclaration_End

/** @brief on a request, create new user in the database with an encrypted password
 * @param w http.ResponseWriter, r *http.Request
 */
func CreateUser(w http.ResponseWriter, r *http.Request) {
	NewUser := &models.User{}
	utils.ParseBody(r, NewUser)

	sameUser := models.FindUser(NewUser.Email)
	if sameUser.Email != "" {
		w.WriteHeader(http.StatusBadRequest)
		return
	}

	password, _ := bcrypt.GenerateFromPassword([]byte(NewUser.Password), 14)

	NewUser.Password = password
	b := NewUser.CreateUser()
	NewUserToken := &models.Token{}
	NewUserToken.UserId = b.ID
	NewUserToken.CreateTokenUser()
	res, _ := json.Marshal(b)
	w.WriteHeader(http.StatusOK)
	w.Write(res)
}

//@EndPointDeclaration_Start
//@Method: GET
//@Path: /user
//@HandlerId: controllers.CreateUser
//@Summary: CreateUser
//@Description: Get a user based on user name
//@Headers
//@-Manger: true, Description
//@EndPointDeclaration_end

//@EndPointDeclaration_start
//@Method  : POST
//@Path: /user
//@     HandlerId    : controllers.PostUser
//@   Summary   : PostUser
//@Description:           Post user data
//@   Headers
//@-  Hello   : false    ,    optional username
//@EndPointDeclaration_end

//@info
//@- description: description test
//@-version   : 1.3 87983
//@- title   :     test oh auehd

//@EndPointDeclaration_start
//@   Summary   : DeleteUser
//@Method  : DELETE
//@Path: /user
//@Description:           Delete user data
//@   Headers
//@-  Hello   : false    ,    optional username
//@-no   : true    , test me please
//@     HandlerId    : controllers.DeleteUser
//@EndPointDeclaration_end
